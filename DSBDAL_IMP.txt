Ass 8
sns.load_dataset(_)
snscountplot(_)
sns.histplot(_)
sns.barplot(_)
sns.boxplot(_)
sns.scatterplot(_)
df.replace(_,_)
pd.get_dummies(_,_)
df.drop()
sns.heatmap(_,_,_,_)

Ass 9
sns.scatterplot(_,_,hue,size,_)
sns.histplot(_,kde,bins)
sns.barplot()
sns.boxplot()
titanic.corr()
sns.heatmap()

Ass 10
numeric_col = df.select_dtypes(include= np.number).columns.tolist()
skewness = skew(df[col])

Ass 4
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.linear_model import LinearRegression

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,random_state=0)

model = LinearRegression()

model.fit(X_train, Y_train)

Y_predict = model.predict(X_train)

plt.figure(figsize=(8, 6))
plt.scatter(Y_train, Y_predict,color='green', label='Actual vs Predicted (Training Set)')
plt.plot([min(Y_train), max(Y_train)], [min(Y_train), max(Y_train)], color='red', linestyle='--', label='Ideal Line')
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual vs Predicted Prices (Training Set)')
plt.legend()
plt.show()

Ass 5 

